---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: refresh-apiendpoint
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "watch", "list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: refresh-apiendpoint-rolebind
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: refresh-apiendpoint-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: refresh-apiendpoint
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: refresh-apiendpoint-sa
  namespace: kube-system

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: refresh-apiendpoint
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: refresh-apiendpoint
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: refresh-apiendpoint
    spec:
      containers:
        - image: devopszhen/kubernetestools:release-master
          imagePullPolicy: Always
          name: refresh-apiendpoint
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      serviceAccountName: refresh-apiendpoint-sa
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

